#include <stdio.h>
#include <math.h>
#include <stm32f7xx.h>
	
int ARR,PSC;
//PG4
//PE4
int cod1;

int main (){	
	RCC->AHB1ENR|=(1<<6)|(1<<4);
	GPIOG->MODER|=0x0;
	GPIOE->MODER|=0x0;
	GPIOG->PUPDR|=0x200;
	GPIOE->PUPDR|=0x200;
	RCC->APB1ENR|=(1<<0);
	GPIOG->MODER|=(1<<10);
	RCC->PLLCFGR|=(1<<16);
	
while(1){

}}

void Clock_PLL(int M, int N, int P, int Q){
// 1. Activar la fuente de reloj
	RCC->CR|=RCC_CR_HSION;
	while((RCC->CR & RCC_CR_HSERDY)==0);
	
//2. Habilitar regulador PWREN
	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
	
//3. Pilas con la latencia	
	FLASH->ACR |= FLASH_ACR_ARTEN | FLASH_ACR_LATENCY_5WS;
	
//4. Ojito con la frecuencia de los perifericos
	RCC->CFGR |= RCC_CFGR_PPRE2_DIV2 | RCC_CFGR_PPRE1_DIV4;
	
// 5. Nos metemos con PLL, M, N, P y Q
	RCC->PLLCFGR &= ~(0xF<<24); //Limpiar el valor de PLLQ
	RCC->PLLCFGR &= ~(0x1<<22); //Limpiar el valor de PLLSRC
	RCC->PLLCFGR &= ~(0x3<<16); //Limpiar el valor de PLLP
	RCC->PLLCFGR &= ~(0x1FF<<6); //Limpiar el valor de PLLN
	RCC->PLLCFGR &= ~(0x3F<<0); //Limpiar el valor de PLLN

	RCC->PLLCFGR |= M<< 8| N << 160| P<< 16| Q<<20 | (RCC_PLLCFGR_PLLSRC_HSE); 

// 6. Encendemos  PLL
	RCC->CR|= RCC_CR_PLLON;
	while((RCC->CR & RCC_CR_PLLRDY)==0);

// 7. Seleccionamos  PLL como reloj principal
	RCC->CFGR |= RCC_CFGR_SW_PLL;
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
}